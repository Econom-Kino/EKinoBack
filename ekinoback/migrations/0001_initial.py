# Generated by Django 3.0.3 on 2020-03-29 08:29

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name="Ім'я")),
            ],
            options={
                'verbose_name': 'Актор',
                'verbose_name_plural': 'Актори',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Cinema',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True, verbose_name='Назва')),
                ('address', models.CharField(max_length=100, verbose_name='Адреса')),
                ('rating', models.FloatField(verbose_name='Рейтинг кінотеатру')),
                ('place_id', models.IntegerField(verbose_name='Номер кінотеатру в Google API')),
                ('longtitude', models.FloatField(verbose_name='Довгота')),
                ('latitude', models.FloatField(verbose_name='Широта')),
                ('website_link', models.URLField(verbose_name='посилання на сайт')),
                ('phone', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message='Phone number must be entered in the format: "+999999999". Up to 15 digits allowed.', regex='^\\+?1?\\d{9,15}$')], verbose_name='Мобільний номер')),
            ],
            options={
                'verbose_name': 'Кінотеатр',
                'verbose_name_plural': 'Кінотеатри',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=20, unique=True, verbose_name='Назва жанру')),
                ('pseudo_id', models.IntegerField(db_index=True, default=0, verbose_name='номер жанру')),
            ],
            options={
                'verbose_name': 'Жанр',
                'verbose_name_plural': 'Жанри',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200, unique=True, verbose_name='Назва')),
                ('trailer_link', models.URLField(verbose_name='Посилання на трейлер')),
                ('poster_link', models.URLField(verbose_name='Посилання на постер')),
                ('age', models.BooleanField(verbose_name='Вікове обмеження')),
                ('rating', models.FloatField(db_index=True, verbose_name='Рейтинг')),
                ('duration', models.IntegerField(verbose_name='Тривалість')),
                ('release_date', models.DateField(verbose_name="Дата прем'єри")),
                ('country_production', models.CharField(max_length=200, verbose_name='Країна')),
                ('director', models.CharField(max_length=200, verbose_name='Режисер')),
                ('description', models.TextField(verbose_name='Опис')),
                ('actors', models.ManyToManyField(to='ekinoback.Actor', verbose_name='Актори')),
                ('genre', models.ManyToManyField(to='ekinoback.Genre', verbose_name='Жанр')),
            ],
            options={
                'verbose_name': 'Фільм',
                'verbose_name_plural': 'Фільми',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Studio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='назва')),
            ],
            options={
                'verbose_name': 'Студія',
                'verbose_name_plural': 'Студії',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField(db_index=True, verbose_name='Ціна (грн.)')),
                ('start_time', models.DateTimeField(verbose_name='Час і дата початку')),
                ('ticket_link', models.URLField(verbose_name='Посилання на квиток')),
                ('language', models.CharField(db_index=True, max_length=20, verbose_name='Мова озвучування')),
                ('technology', models.CharField(db_index=True, max_length=20, verbose_name='Технологія')),
                ('cinema', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ekinoback.Cinema', verbose_name='Кінотеатр')),
                ('movie', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ekinoback.Movie', verbose_name='Фільм')),
            ],
            options={
                'verbose_name': 'Сеанс',
                'verbose_name_plural': 'Сеанси',
                'ordering': ['price'],
            },
        ),
        migrations.AddField(
            model_name='movie',
            name='studio',
            field=models.ManyToManyField(to='ekinoback.Studio', verbose_name='Студія'),
        ),
        migrations.CreateModel(
            name='CinemaImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_link', models.URLField(verbose_name='Посилання на фото')),
                ('cinema', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ekinoback.Cinema', verbose_name='кінотеатр')),
            ],
            options={
                'verbose_name': 'Фото',
                'verbose_name_plural': 'Галерея',
                'ordering': ['cinema'],
            },
        ),
    ]
